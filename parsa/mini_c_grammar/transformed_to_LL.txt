Function      ->  Type identifier ( ArgList ) CompoundStmt

ArgList       ->  Arg ArgList2

ArgList2      ->  , Arg ArgList2
                  | ε

Arg           ->  Type identifier
Declaration   ->  Type IdentList ;
Type          ->  int
                  | float
IdentList     ->  identifier , IdentList
                  | identifier
Stmt          ->  ForStmt
                  | WhileStmt
                  | Expr ;
                  | IfStmt
                  | CompoundStmt
                  | Declaration
                  | ;
ForStmt       ->  for ( Expr ; OptExpr ; OptExpr ) Stmt
OptExpr       ->  Expr
                  | ε
WhileStmt     ->  while ( Expr ) Stmt
IfStmt        ->  if ( Expr ) Stmt ElsePart
ElsePart      ->  else Stmt
                  | ε
CompoundStmt  ->  { StmtList }

StmtList      ->  Stmt StmtList
                  | ε

Expr          ->  identifier = Expr
                  | Rvalue

Rvalue -> Mag Rvalue2

Rvalue2 -> compare mag Rvalue2
           | ε

Compare       ->  == | < | > | <= | >= | !=

Mag           ->  Term Mag2
Mag2          ->  + Term Mag2
                  | - Term Mag2
                  | ε

Term          ->  Factor Term2
Term2         ->  * Factor Term2
                  | / Factor Term2
                  | ε

Factor        ->  ( Expr )
                  | - Factor
                  | + Factor
                  | identifier
                  | number